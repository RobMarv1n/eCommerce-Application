name: Lighthouse CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Run Lighthouse CI
        run: lhci autorun || true

      - name: Extract Lighthouse links and scores
        id: lighthouse-scores
        run: |
          echo "scores<<EOF" >> $GITHUB_OUTPUT
          echo "📊 **Lighthouse Audit Report:**" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "| Страница | Performance | Accessibility | Best Practices | SEO |" >> $GITHUB_OUTPUT
          echo "|----------|-------------|----------------|----------------|-----|" >> $GITHUB_OUTPUT

          reports=$(find .lighthouseci -name "*.report.json")

          for json_file in $reports; do
            url=$(jq -r '.finalUrl' "$json_file")
            perf=$(jq -r '.categories.performance.score' "$json_file")
            acc=$(jq -r '.categories.accessibility.score' "$json_file")
            bp=$(jq -r '.categories["best-practices"].score' "$json_file")
            seo=$(jq -r '.categories.seo.score' "$json_file")

            path=$(echo "$url" | sed -E 's|https?://[^/]+||')
            [ "$path" = "" ] && path="/"  # корневая страница

            # Ищем соответствующий lhr.html URL из manifest.json
            html_url=$(jq -r --arg url "$url" '.runs[] | select(.lhr.finalUrl==$url) | .url' .lighthouseci/manifest.json)

            echo "| [$path]($html_url) | $perf | $acc | $bp | $seo |" >> $GITHUB_OUTPUT
          done

          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment PR with Lighthouse Report
        uses: marocchino/sticky-pull-request-comment@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: ${{ steps.lighthouse-scores.outputs.scores }}
